<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
<title>MathML Sample (CSS)</title>
<meta charset="UTF-8"/> 
<link rel="stylesheet" type="text/css" href="../Styles/a11yMath.css"/>
</head>

<body>
<h1> Sample page with Math encoded as CSS Math</h1>
<h2> CSS Math Description</h2>
<p>
This page uses CSS styling to encode math. This technique is by some renderers such as MathJax in some output modes. It's advantage is that uses standard HTML+CSS and matches the font sizes. The disadvantage is that it produces "span soup" and requires fonts that may need to be downloaded.
</p>
<h2>Additional requirements to make the math accessible</h2>
<p>
In order to make this accessible, three separate elements are used as shown:
</p>

    <pre>
&lt;span class="MathMLNoJavaHidden" aria-hidden="true"&gt;
   &lt;math xmlns="http://www.w3.org/1998/Math/MathML" class="MathMLNoDisplay"&gt; ...MathML... &lt;/math&gt;
&lt;/span&gt;
&lt;span role="math" aria-hidden="true" &gt; ...CSS Math... &lt;/span&gt;
    </pre>
  <p>Although the order is not important, for we present an ordering to simplify the description.</p>
  <ol>
<li>The first item is the MathML equivalent of the CSS Math. This element allows for full accessibility when possible. The element is clipped and invisible to both display and speech. When MathML and JS are supported, this element has aria-hidden changed to 'false' so that the reading system uses it.<br/>
Note: 'aria-hidden' is not allowed on a &lt;math&gt; tag, so the MathML is wrapped in a &lt;span&gt; element.</li>
<li>A span element containing the text to speak follows the MathML. It is hidden from display but not speech. When MathML and JS are supported, this element is changed so it is not spoken.</li>
<li>The CSS math is last. The topmost span tag must have role="math" and aria-hidden="true". It is visible to display but not speech.</li>
</ol>

<p>
Note: the CSS Math examples in this document were generated by MathJax. They contain attribute settings for many attributes such as class and id. These are not required for EPUB accessibility and are for MathJax's internal use.
</p>
<p>
If there is <em>no</em> JavaScript support, then we presume there is no MathML support and have the cases:
    </p>
<ul>
<li>ARIA supported: the second element is read and the third element is displayed</li>
<li><em>No</em> ARIA support (Kindle only?): we get triple reading, the middle of which is right.
<i>It is possible that the EPUB-to-MOBI conversion tool strips the MathML so that we only get a double reading.</i> The style sheet for Kindle's should remove the MathML from the reading and display so we just get a double reading.</li>
</ul>

</body>
</html>
