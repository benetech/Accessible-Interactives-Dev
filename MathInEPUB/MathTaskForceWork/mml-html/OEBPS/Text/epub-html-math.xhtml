<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
<title>MathML Sample (HTML Math)</title>
<meta charset="UTF-8"/> 
<link rel="stylesheet" type="text/css" href="../Styles/a11yMath.css"/>
</head>

<body>
<h1> Sample page with Math encoded as HTML Math</h1>
<h2> HTML Math Description</h2>
<p>
This page uses &lt;i&gt;, &lt;sup&gt;, and &lt;sub&gt; tags along with non-breaking spaces to encode math. This technique is only useful for very simple math. It's advantage is that it renders quickly, works everywhere, and matches the fonts family and sizes on the page although the math typography is not great.
</p>
<h2>Additional requirements to make the math accessible</h2>
<p>
In order to make this accessible, three separate elements are used as shown:
</p>
<div>
    <pre>
&lt;span class="MathMLNoJavaHidden" aria-hidden="true"&gt;
   &lt;math xmlns="http://www.w3.org/1998/Math/MathML" class="MathMLNoDisplay"&gt; ...MathML... &lt;/math&gt;
&lt;/span&gt;
&lt;span class="MathMLNoDisplay"&gt; ...text to speak... &lt;span&gt;
&lt;span role="math" aria-hidden="true" &gt; ...HTML Math... &lt;/span&gt;
    </pre>
</div> 
<p>
Although the order is not important, we use an ordering to simplify the description.
</p>
<ol>
<li>The first item is the MathML equivalent of the HTML Math. This element allows for full accessibility when possible. The element is clipped and invisible to both display and speech. When MathML and JS are supported, this element has aria-hidden changed to 'false' so that the reading system uses it.<br/>
Note: 'aria-hidden' is not allowed on a &lt;math&gt; tag, so the MathML is wrapped in a &lt;span&gt; element.</li>
<li>A span element containing the text to speak follows the MathML. It is hidden from display but not speech. When MathML and JS are supported, this element is changed so it is not spoken.</li>
<li>The HTML math is last. It must be wrapped in a span tag with role="math". It is visible to display but not speech.</li>
</ol>
<p>
If the math is linear (does not use &lt;sup&gt; or &lt;sub&gt;), then the only the third element (the HTML math) can be used. This might ease the burden for publishers. However, additional screen reader support or additional JavaScript (basically, to recreate the MathML) is needed for conversion to braille.
</p>
<p>
If there is <em>no</em> JavaScript support, then we presume there is no MathML support and have the cases:
</p>
<ul>
<li>ARIA supported: the second element is read and the third element is displayed</li>
<li><em>No</em> ARIA support (Kindle only?): we get triple reading, the middle of which is right.
<i>It is possible that the EPUB-to-MOBI conversion tool strips the MathML so that we only get a double reading.</i> The style sheet for Kindle's should remove the MathML from the reading and display so we just get a double reading.</li>
</ul>
<p>Note: in the sample below, the larger display math is encoded as an image. Please see the appropriate web page for how this is done so that it is accessible.
</p>
</body>
</html>
